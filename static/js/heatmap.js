let delay = 1; // in minutes
let familyName = "testdb";

// Hard-set locations of PI's
var locations = [
    ["OIL1", "125", "65"],
    ["OIL2", "60", "120"],
    ["OIL3", "160", "60"],
    ["OIL3", "160", "160"]
];

// create a simpleheat object given an id or canvas reference
var heat = simpleheat('canvas').max(18),
    frame;
heat.radius(40, 20);
heat.gradient({0.4: 'rgb(255, 0, 0)', 0.65: 'rgb(255, 255, 0)', 1: 'rgb(255, 255, 255)'});

// Refresh heatmap every minute
interval();
setInterval(function(){
    interval();
}, 5000);

function receiveData() {
    return $.ajax({
        url: "http://192.168.21.92/api/v1/by_location/" + familyName + "?history=" + delay,
        DataType: "json",
        success: function (data) {},
        error: function (errorMessage) {
            console.log(errorMessage);
        }
    });
}

function interval(){
    let usableData = [];

    // Random amount of devices
    let r1 = Math.floor(Math.random() * 30);
    let r2 = Math.floor(Math.random() * 30);
    let r3 = Math.floor(Math.random() * 30);
    let r4 = Math.floor(Math.random() * 30);

    // X, Y and amount of devices.
    // Normally this is generated by the FIND3 server, but for the demo we generate the data.
    usableData = [
        ["125", "65", r1],
        ["280", "65", r2],
        ["280", "225", r3],
        ["125", "225", r4]
    ];

    for(let i = 0; i < usableData.length; i++){
        $("#loc-" + (i+1)).text(usableData[i][2]);
    }

    heat.data(usableData);
    heat.draw();
    heat.clear();
}

function ModifyData(data) {
    let usableData = [];

    // Push X, Y and Amount (intensity) if location name is equal to API location name
    data.locations.forEach((loc) => {
        let key = arraySearch(locations, loc.location);
        if(key !== false){
            usableData.push([locations[key][1], locations[key][2] , loc.total]);
        }
    });

    return usableData;
}

function arraySearch(arr, val){
    for(let i = 0; i < arr.length; i++){
        if(arr[i][0] == val){
            return i;
        }
    }
    return false;
}