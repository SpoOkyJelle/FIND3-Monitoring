// locations of the workspaces
var locations = [
    ["OIL1", "50", "65"],
    ["OIL2", "60", "120"],
    ["OIL3", "160", "60"],
    ["OIL4", "160", "160"],
    ["OIL5", "160", "160"]
];

// create a simpleheat canvas
var heat = simpleheat('canvas').max(18), frame;
heat.radius(40, 20);
heat.gradient({0.4: 'rgb(255, 0, 0)', 0.65: 'rgb(255, 255, 0)', 1: 'rgb(255, 255, 255)'});

// Refresh heatmap every 5 seconds
receiveData();
setInterval(function(){
    receiveData();
}, 1000);

function Moc(){
    let mocData = [];

    // Random amount of devices between 0 and 30 (Moc data)
    let r1 = Math.floor(Math.random() * 30);
    let r2 = Math.floor(Math.random() * 30);
    let r3 = Math.floor(Math.random() * 30);
    let r4 = Math.floor(Math.random() * 30);
    let r5 = Math.floor(Math.random() * 30);

    // X, Y and amount of devices.
    // Normally this is generated by the FIND3 server, but for the demo we generate the data.
    mocData = [
        ["100", "100", r1],
        ["325", "100", r2],
        ["325", "325", r3],
        ["100", "300", r4],
        ["230", "200", r5]
    ];

    // loop over locations and give them the  
    for(let i = 0; i < mocData.length; i++){
        $("#loc-" + (i+1)).text(mocData[i][2]);
    }

    heat.data(mocData);
    heat.draw();
    heat.clear();
}


// receive data from database/find3 api
function receiveData() {
    return $.ajax({
        url: "http://localhost:5000/heatmapapi",
        DataType: "json",
        success: function (data) {
            console.log(data);
            callBack(data);
        },
        error: function (errorMessage) {
            console.log(errorMessage);
        }
    });
}

function callBack(data){
    let r1 = Math.floor(Math.random() * 30);

    mocData = [
        "325", "325", r1
    ]

    $("#loc-1").text(data.last_updated);
    
    heat.data(mocData);
    heat.draw();
    heat.clear();
}


// used if API is online
// function ModifyData(data) {
//     let usableData = [];

//     // Push X, Y and Amount (intensity) if location name is equal to API location name
//     data.locations.forEach((loc) => {
//         let key = arraySearch(locations, loc.location);
//         if(key !== false){
//             usableData.push([locations[key][1], locations[key][2] , loc.total]);
//         }
//     });

//     return usableData;
// }

// function arraySearch(arr, val){
//     for(let i = 0; i < arr.length; i++){
//         if(arr[i][0] == val){
//             return i;
//         }
//     }
//     return false;
// }